#!/usr/bin/env python3
"""
ASIS Generated API Service
=========================

Purpose: REST API for data processing and retrieval
Generated: 2025-09-22T16:12:34.291392
"""

import json
from datetime import datetime
from typing import Dict, Any

class AsisApiService:
    """Simple API service generated by ASIS"""
    
    def __init__(self):
        self.session_id = "20250922_161234"
        self.endpoints = {
            "/status": self._status_endpoint,
            "/process": self._process_endpoint,
            "/info": self._info_endpoint
        }
        
        print(f"üåê ASIS API Service initialized")
        print(f"   Session: {self.session_id}")
        print(f"   Endpoints: {len(self.endpoints)}")
    
    def handle_request(self, endpoint: str, data: Dict[str, Any] = None) -> Dict[str, Any]:
        """Handle API request"""
        
        response = {
            "endpoint": endpoint,
            "timestamp": datetime.now().isoformat(),
            "session_id": self.session_id,
            "success": False,
            "data": None
        }
        
        try:
            if endpoint in self.endpoints:
                handler = self.endpoints[endpoint]
                response["data"] = handler(data or {})
                response["success"] = True
            else:
                response["error"] = f"Endpoint not found: {endpoint}"
                
        except Exception as e:
            response["error"] = str(e)
        
        return response
    
    def _status_endpoint(self, request_data: Dict[str, Any]) -> Dict[str, Any]:
        """Status endpoint handler"""
        return {
            "status": "online",
            "service": "ASIS API Service",
            "version": "1.0.0",
            "uptime": "active",
            "endpoints_available": len(self.endpoints)
        }
    
    def _process_endpoint(self, request_data: Dict[str, Any]) -> Dict[str, Any]:
        """Data processing endpoint"""
        
        input_data = request_data.get("data", "")
        
        return {
            "original_data": input_data,
            "processed_data": str(input_data).upper(),
            "processing_time": "1ms",
            "data_length": len(str(input_data))
        }
    
    def _info_endpoint(self, request_data: Dict[str, Any]) -> Dict[str, Any]:
        """Information endpoint"""
        return {
            "service_name": "ASIS API Service",
            "purpose": "REST API for data processing and retrieval",
            "generated_by": "ASIS Autonomous Code Generator",
            "session_id": self.session_id,
            "capabilities": [
                "Status monitoring",
                "Data processing",
                "Information retrieval"
            ]
        }

def demo_api_service():
    """Demo the API service"""
    
    api = AsisApiService()
    
    # Test endpoints
    test_requests = [
        ("/status", {},
        ("/process", {"data": "hello world"})
        ("/info", {})
    ]
    
    print("\nüåê Testing API Service...")
    
    for endpoint, data in test_requests:
        response = api.handle_request(endpoint, data)
        
        print(f"\nüì° {endpoint}:")
        print(f"   Success: {response['success']}")
        
        if response["success"]:
            print(f"   Data: {json.dumps(response['data'], indent=2)}")
        else:
            print(f"   Error: {response.get('error', 'Unknown')}")

if __name__ == "__main__":
    demo_api_service()