#!/usr/bin/env python3
"""
ASIS Generated Simple Application
Purpose: basic application for testing
Generated: 2025-09-22T16:57:01.141659
"""

import os
import sys
import json
from datetime import datetime

class SimpleApp:
    """Simple application generated by ASIS"""
    
    def __init__(self):
        self.app_name = "ASIS Simple App"
        self.session_id = "20250922_165701"
        self.start_time = datetime.now()
        print("[ASIS] Simple App initialized successfully")
    
    def run(self):
        """Run the main application logic"""
        print("[ASIS] Starting application execution...")
        
        self.process_data()
        self.generate_report()
        
        print("[ASIS] Application completed successfully")
        return True
    
    def process_data(self):
        """Process sample data"""
        sample_data = [
            {"name": "item1", "value": 100},
            {"name": "item2", "value": 200},
            {"name": "item3", "value": 300}
        ]
        
        total = sum(item["value"] for item in sample_data)
        print(f"[ASIS] Processed {len(sample_data)} items, total: {total}")
        
        return total
    
    def generate_report(self):
        """Generate a simple report"""
        report = {
            "app_name": self.app_name,
            "session_id": self.session_id,
            "timestamp": datetime.now().isoformat(),
            "status": "completed",
            "message": "ASIS application executed successfully"
        }
        
        report_file = os.path.join(os.path.dirname(__file__), "asis_report.json")
        with open(report_file, 'w') as f:
            json.dump(report, f, indent=2)
        
        print(f"[ASIS] Report generated: {report_file}")
        return report

def main():
    """Main entry point"""
    print("[ASIS] === SIMPLE APPLICATION DEMO ===")
    
    app = SimpleApp()
    success = app.run()
    
    if success:
        print("[ASIS] === EXECUTION COMPLETED SUCCESSFULLY ===")
    else:
        print("[ASIS] === EXECUTION FAILED ===")
    
    return success

if __name__ == "__main__":
    main()
