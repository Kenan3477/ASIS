#!/usr/bin/env python3
"""
ASIS Web Application
Purpose: static web application generator
"""

import os
import json
from datetime import datetime

class WebApp:
    """Web application generator"""
    
    def __init__(self):
        self.session_id = "20250922_165449"
        self.app_name = "ASIS Web Application"
        print("[ASIS] Web application initialized")
    
    def generate_html_content(self):
        """Generate HTML content"""
        html_template = """<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>ASIS Web App</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { background: #f0f8ff; padding: 20px; border-radius: 5px; }
        .content { margin: 20px 0; }
        .footer { color: #666; font-size: 12px; }
    </style>
</head>
<body>
    <div class="header">
        <h1>{app_name}</h1>
        <p>Session: {session_id}</p>
        <p>Generated: {timestamp}</p>
    </div>
    <div class="content">
        <h2>Application Status</h2>
        <p>Status: <strong>Active and Running</strong></p>
        <p>Purpose: {purpose}</p>
        <h2>Features</h2>
        <ul>
            <li>Dynamic HTML generation</li>
            <li>Static site creation</li>
            <li>JSON data export</li>
            <li>Responsive design</li>
        </ul>
    </div>
    <div class="footer">
        <p>Generated by ASIS Autonomous Code Generator</p>
    </div>
</body>
</html>"""
        
        html_content = html_template.format(
            app_name=self.app_name,
            session_id=self.session_id,
            timestamp=datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            purpose="static web application generator"
        )
        
        return html_content
    
    def create_static_site(self):
        """Create static website files"""
        html_content = self.generate_html_content()
        
        # Save HTML file
        html_file = os.path.join(os.path.dirname(__file__), "generated_website.html")
        with open(html_file, 'w', encoding='utf-8') as f:
            f.write(html_content)
        
        print(f"[ASIS] HTML file created: {html_file}")
        
        # Create JSON data file
        data = {
            "app_name": self.app_name,
            "session_id": self.session_id,
            "created_at": datetime.now().isoformat(),
            "html_file": html_file,
            "status": "generated_successfully"
        }
        
        json_file = os.path.join(os.path.dirname(__file__), "web_app_data.json")
        with open(json_file, 'w', encoding='utf-8') as f:
            json.dump(data, f, indent=2)
        
        print(f"[ASIS] JSON data file created: {json_file}")
        
        return html_file, json_file
    
    def run(self):
        """Run web application"""
        print("[ASIS] Creating web application...")
        html_file, json_file = self.create_static_site()
        
        result = {
            "status": "success",
            "html_file": html_file,
            "json_file": json_file,
            "session_id": self.session_id,
            "timestamp": datetime.now().isoformat(),
            "message": "Web application generated successfully"
        }
        
        print(f"[ASIS] Web application completed successfully")
        print(f"[ASIS] Files created: HTML and JSON")
        return result

def main():
    """Main function"""
    app = WebApp()
    result = app.run()
    print("[ASIS] Web application generation completed successfully")
    return result

if __name__ == "__main__":
    main()
